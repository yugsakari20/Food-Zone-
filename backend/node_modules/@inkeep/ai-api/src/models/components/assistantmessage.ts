/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  RecordsCited,
  RecordsCited$inboundSchema,
  RecordsCited$Outbound,
  RecordsCited$outboundSchema,
} from "./recordscited.js";

export type AssistantMessage = {
  role?: "assistant" | undefined;
  content: string;
  recordsCited?: RecordsCited | undefined;
};

/** @internal */
export const AssistantMessage$inboundSchema: z.ZodType<
  AssistantMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: z.literal("assistant").optional(),
  content: z.string(),
  records_cited: RecordsCited$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "records_cited": "recordsCited",
  });
});

/** @internal */
export type AssistantMessage$Outbound = {
  role: "assistant";
  content: string;
  records_cited?: RecordsCited$Outbound | undefined;
};

/** @internal */
export const AssistantMessage$outboundSchema: z.ZodType<
  AssistantMessage$Outbound,
  z.ZodTypeDef,
  AssistantMessage
> = z.object({
  role: z.literal("assistant").default("assistant" as const),
  content: z.string(),
  recordsCited: RecordsCited$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    recordsCited: "records_cited",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantMessage$ {
  /** @deprecated use `AssistantMessage$inboundSchema` instead. */
  export const inboundSchema = AssistantMessage$inboundSchema;
  /** @deprecated use `AssistantMessage$outboundSchema` instead. */
  export const outboundSchema = AssistantMessage$outboundSchema;
  /** @deprecated use `AssistantMessage$Outbound` instead. */
  export type Outbound = AssistantMessage$Outbound;
}
