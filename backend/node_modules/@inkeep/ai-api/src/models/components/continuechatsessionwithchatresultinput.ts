/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  Message,
  Message$inboundSchema,
  Message$Outbound,
  Message$outboundSchema,
} from "./message.js";

export type ContinueChatSessionWithChatResultInput = {
  integrationId: string;
  message: Message;
  stream?: boolean | undefined;
};

/** @internal */
export const ContinueChatSessionWithChatResultInput$inboundSchema: z.ZodType<
  ContinueChatSessionWithChatResultInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  integration_id: z.string(),
  message: Message$inboundSchema,
  stream: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "integration_id": "integrationId",
  });
});

/** @internal */
export type ContinueChatSessionWithChatResultInput$Outbound = {
  integration_id: string;
  message: Message$Outbound;
  stream: boolean;
};

/** @internal */
export const ContinueChatSessionWithChatResultInput$outboundSchema: z.ZodType<
  ContinueChatSessionWithChatResultInput$Outbound,
  z.ZodTypeDef,
  ContinueChatSessionWithChatResultInput
> = z.object({
  integrationId: z.string(),
  message: Message$outboundSchema,
  stream: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContinueChatSessionWithChatResultInput$ {
  /** @deprecated use `ContinueChatSessionWithChatResultInput$inboundSchema` instead. */
  export const inboundSchema =
    ContinueChatSessionWithChatResultInput$inboundSchema;
  /** @deprecated use `ContinueChatSessionWithChatResultInput$outboundSchema` instead. */
  export const outboundSchema =
    ContinueChatSessionWithChatResultInput$outboundSchema;
  /** @deprecated use `ContinueChatSessionWithChatResultInput$Outbound` instead. */
  export type Outbound = ContinueChatSessionWithChatResultInput$Outbound;
}
