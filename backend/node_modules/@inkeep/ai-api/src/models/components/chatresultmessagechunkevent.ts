/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  MessageChunk,
  MessageChunk$inboundSchema,
  MessageChunk$Outbound,
  MessageChunk$outboundSchema,
} from "./messagechunk.js";

/**
 * A server-sent event containing a chunk of the message.
 */
export type ChatResultMessageChunkEvent = {
  event?: "message_chunk" | undefined;
  data: MessageChunk;
};

/** @internal */
export const ChatResultMessageChunkEvent$inboundSchema: z.ZodType<
  ChatResultMessageChunkEvent,
  z.ZodTypeDef,
  unknown
> = z.object({
  event: z.literal("message_chunk").optional(),
  data: z.string().transform((v, ctx) => {
    try {
      return JSON.parse(v);
    } catch (err) {
      ctx.addIssue({
        code: z.ZodIssueCode.custom,
        message: `malformed json: ${err}`,
      });
      return z.NEVER;
    }
  }).pipe(MessageChunk$inboundSchema),
});

/** @internal */
export type ChatResultMessageChunkEvent$Outbound = {
  event: "message_chunk";
  data: MessageChunk$Outbound;
};

/** @internal */
export const ChatResultMessageChunkEvent$outboundSchema: z.ZodType<
  ChatResultMessageChunkEvent$Outbound,
  z.ZodTypeDef,
  ChatResultMessageChunkEvent
> = z.object({
  event: z.literal("message_chunk").default("message_chunk" as const),
  data: MessageChunk$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatResultMessageChunkEvent$ {
  /** @deprecated use `ChatResultMessageChunkEvent$inboundSchema` instead. */
  export const inboundSchema = ChatResultMessageChunkEvent$inboundSchema;
  /** @deprecated use `ChatResultMessageChunkEvent$outboundSchema` instead. */
  export const outboundSchema = ChatResultMessageChunkEvent$outboundSchema;
  /** @deprecated use `ChatResultMessageChunkEvent$Outbound` instead. */
  export type Outbound = ChatResultMessageChunkEvent$Outbound;
}
