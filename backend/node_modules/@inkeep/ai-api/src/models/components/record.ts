/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  RecordType,
  RecordType$inboundSchema,
  RecordType$Outbound,
  RecordType$outboundSchema,
} from "./recordtype.js";

export type RecordT = {
  /**
   * The type of record
   */
  type: RecordType;
  url?: string | null | undefined;
  title?: string | null | undefined;
  description?: string | null | undefined;
  breadcrumbs?: Array<string> | null | undefined;
};

/** @internal */
export const RecordT$inboundSchema: z.ZodType<RecordT, z.ZodTypeDef, unknown> =
  z.object({
    type: RecordType$inboundSchema,
    url: z.nullable(z.string()).optional(),
    title: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    breadcrumbs: z.nullable(z.array(z.string())).optional(),
  });

/** @internal */
export type RecordT$Outbound = {
  type: RecordType$Outbound;
  url?: string | null | undefined;
  title?: string | null | undefined;
  description?: string | null | undefined;
  breadcrumbs?: Array<string> | null | undefined;
};

/** @internal */
export const RecordT$outboundSchema: z.ZodType<
  RecordT$Outbound,
  z.ZodTypeDef,
  RecordT
> = z.object({
  type: RecordType$outboundSchema,
  url: z.nullable(z.string()).optional(),
  title: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  breadcrumbs: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordT$ {
  /** @deprecated use `RecordT$inboundSchema` instead. */
  export const inboundSchema = RecordT$inboundSchema;
  /** @deprecated use `RecordT$outboundSchema` instead. */
  export const outboundSchema = RecordT$outboundSchema;
  /** @deprecated use `RecordT$Outbound` instead. */
  export type Outbound = RecordT$Outbound;
}
