/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export enum Four {
  Stop = "stop",
  Length = "length",
  ContentFilter = "content_filter",
}

export type MessageChunk = {
  chatSessionId?: string | null | undefined;
  contentChunk: string;
  finishReason?: any | null | undefined;
};

/** @internal */
export const Four$inboundSchema: z.ZodNativeEnum<typeof Four> = z.nativeEnum(
  Four,
);

/** @internal */
export const Four$outboundSchema: z.ZodNativeEnum<typeof Four> =
  Four$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Four$ {
  /** @deprecated use `Four$inboundSchema` instead. */
  export const inboundSchema = Four$inboundSchema;
  /** @deprecated use `Four$outboundSchema` instead. */
  export const outboundSchema = Four$outboundSchema;
}

/** @internal */
export const MessageChunk$inboundSchema: z.ZodType<
  MessageChunk,
  z.ZodTypeDef,
  unknown
> = z.object({
  chat_session_id: z.nullable(z.string()).optional(),
  content_chunk: z.string(),
  finish_reason: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "chat_session_id": "chatSessionId",
    "content_chunk": "contentChunk",
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type MessageChunk$Outbound = {
  chat_session_id?: string | null | undefined;
  content_chunk: string;
  finish_reason?: any | null | undefined;
};

/** @internal */
export const MessageChunk$outboundSchema: z.ZodType<
  MessageChunk$Outbound,
  z.ZodTypeDef,
  MessageChunk
> = z.object({
  chatSessionId: z.nullable(z.string()).optional(),
  contentChunk: z.string(),
  finishReason: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    chatSessionId: "chat_session_id",
    contentChunk: "content_chunk",
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageChunk$ {
  /** @deprecated use `MessageChunk$inboundSchema` instead. */
  export const inboundSchema = MessageChunk$inboundSchema;
  /** @deprecated use `MessageChunk$outboundSchema` instead. */
  export const outboundSchema = MessageChunk$outboundSchema;
  /** @deprecated use `MessageChunk$Outbound` instead. */
  export type Outbound = MessageChunk$Outbound;
}
