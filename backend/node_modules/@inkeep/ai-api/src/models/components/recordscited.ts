/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Citation,
  Citation$inboundSchema,
  Citation$Outbound,
  Citation$outboundSchema,
} from "./citation.js";

export type RecordsCited = {
  citations: Array<Citation>;
};

/** @internal */
export const RecordsCited$inboundSchema: z.ZodType<
  RecordsCited,
  z.ZodTypeDef,
  unknown
> = z.object({
  citations: z.array(Citation$inboundSchema),
});

/** @internal */
export type RecordsCited$Outbound = {
  citations: Array<Citation$Outbound>;
};

/** @internal */
export const RecordsCited$outboundSchema: z.ZodType<
  RecordsCited$Outbound,
  z.ZodTypeDef,
  RecordsCited
> = z.object({
  citations: z.array(Citation$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordsCited$ {
  /** @deprecated use `RecordsCited$inboundSchema` instead. */
  export const inboundSchema = RecordsCited$inboundSchema;
  /** @deprecated use `RecordsCited$outboundSchema` instead. */
  export const outboundSchema = RecordsCited$outboundSchema;
  /** @deprecated use `RecordsCited$Outbound` instead. */
  export type Outbound = RecordsCited$Outbound;
}
