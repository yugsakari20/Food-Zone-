import * as z from "zod";
import { Message, Message$Outbound } from "./message.js";
export type ChatSessionInput = {
    guidance?: string | null | undefined;
    context?: string | null | undefined;
    messages: Array<Message>;
    tags?: Array<string> | undefined;
};
/** @internal */
export declare const ChatSessionInput$inboundSchema: z.ZodType<ChatSessionInput, z.ZodTypeDef, unknown>;
/** @internal */
export type ChatSessionInput$Outbound = {
    guidance?: string | null | undefined;
    context?: string | null | undefined;
    messages: Array<Message$Outbound>;
    tags?: Array<string> | undefined;
};
/** @internal */
export declare const ChatSessionInput$outboundSchema: z.ZodType<ChatSessionInput$Outbound, z.ZodTypeDef, ChatSessionInput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ChatSessionInput$ {
    /** @deprecated use `ChatSessionInput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ChatSessionInput, z.ZodTypeDef, unknown>;
    /** @deprecated use `ChatSessionInput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ChatSessionInput$Outbound, z.ZodTypeDef, ChatSessionInput>;
    /** @deprecated use `ChatSessionInput$Outbound` instead. */
    type Outbound = ChatSessionInput$Outbound;
}
//# sourceMappingURL=chatsessioninput.d.ts.map