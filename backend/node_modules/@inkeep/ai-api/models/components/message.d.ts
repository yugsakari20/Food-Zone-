import * as z from "zod";
import { AssistantMessage, AssistantMessage$Outbound } from "./assistantmessage.js";
import { UserMessage, UserMessage$Outbound } from "./usermessage.js";
export type Message = (UserMessage & {
    role: "user";
}) | (AssistantMessage & {
    role: "assistant";
});
/** @internal */
export declare const Message$inboundSchema: z.ZodType<Message, z.ZodTypeDef, unknown>;
/** @internal */
export type Message$Outbound = (UserMessage$Outbound & {
    role: "user";
}) | (AssistantMessage$Outbound & {
    role: "assistant";
});
/** @internal */
export declare const Message$outboundSchema: z.ZodType<Message$Outbound, z.ZodTypeDef, Message>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Message$ {
    /** @deprecated use `Message$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Message, z.ZodTypeDef, unknown>;
    /** @deprecated use `Message$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Message$Outbound, z.ZodTypeDef, Message>;
    /** @deprecated use `Message$Outbound` instead. */
    type Outbound = Message$Outbound;
}
//# sourceMappingURL=message.d.ts.map