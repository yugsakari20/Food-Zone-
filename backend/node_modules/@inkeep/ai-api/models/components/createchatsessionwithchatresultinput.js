"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateChatSessionWithChatResultInput$ = exports.CreateChatSessionWithChatResultInput$outboundSchema = exports.CreateChatSessionWithChatResultInput$inboundSchema = exports.ChatMode$ = exports.ChatMode$outboundSchema = exports.ChatMode$inboundSchema = exports.ChatModeOptions$ = exports.ChatModeOptions$outboundSchema = exports.ChatModeOptions$inboundSchema = exports.ChatModeOptions = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const chatsessioninput_js_1 = require("./chatsessioninput.js");
var ChatModeOptions;
(function (ChatModeOptions) {
    ChatModeOptions["Turbo"] = "turbo";
    ChatModeOptions["Auto"] = "auto";
})(ChatModeOptions || (exports.ChatModeOptions = ChatModeOptions = {}));
/** @internal */
exports.ChatModeOptions$inboundSchema = z.nativeEnum(ChatModeOptions);
/** @internal */
exports.ChatModeOptions$outboundSchema = exports.ChatModeOptions$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ChatModeOptions$;
(function (ChatModeOptions$) {
    /** @deprecated use `ChatModeOptions$inboundSchema` instead. */
    ChatModeOptions$.inboundSchema = exports.ChatModeOptions$inboundSchema;
    /** @deprecated use `ChatModeOptions$outboundSchema` instead. */
    ChatModeOptions$.outboundSchema = exports.ChatModeOptions$outboundSchema;
})(ChatModeOptions$ || (exports.ChatModeOptions$ = ChatModeOptions$ = {}));
/** @internal */
exports.ChatMode$inboundSchema = z.union([exports.ChatModeOptions$inboundSchema, z.string()]);
/** @internal */
exports.ChatMode$outboundSchema = z.union([exports.ChatModeOptions$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ChatMode$;
(function (ChatMode$) {
    /** @deprecated use `ChatMode$inboundSchema` instead. */
    ChatMode$.inboundSchema = exports.ChatMode$inboundSchema;
    /** @deprecated use `ChatMode$outboundSchema` instead. */
    ChatMode$.outboundSchema = exports.ChatMode$outboundSchema;
})(ChatMode$ || (exports.ChatMode$ = ChatMode$ = {}));
/** @internal */
exports.CreateChatSessionWithChatResultInput$inboundSchema = z.object({
    integration_id: z.string(),
    chat_session: chatsessioninput_js_1.ChatSessionInput$inboundSchema,
    chat_mode: z.union([exports.ChatModeOptions$inboundSchema, z.string()]).optional(),
    stream: z.boolean().default(false),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "integration_id": "integrationId",
        "chat_session": "chatSession",
        "chat_mode": "chatMode",
    });
});
/** @internal */
exports.CreateChatSessionWithChatResultInput$outboundSchema = z.object({
    integrationId: z.string(),
    chatSession: chatsessioninput_js_1.ChatSessionInput$outboundSchema,
    chatMode: z.union([exports.ChatModeOptions$outboundSchema, z.string()]).optional(),
    stream: z.boolean().default(false),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        integrationId: "integration_id",
        chatSession: "chat_session",
        chatMode: "chat_mode",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreateChatSessionWithChatResultInput$;
(function (CreateChatSessionWithChatResultInput$) {
    /** @deprecated use `CreateChatSessionWithChatResultInput$inboundSchema` instead. */
    CreateChatSessionWithChatResultInput$.inboundSchema = exports.CreateChatSessionWithChatResultInput$inboundSchema;
    /** @deprecated use `CreateChatSessionWithChatResultInput$outboundSchema` instead. */
    CreateChatSessionWithChatResultInput$.outboundSchema = exports.CreateChatSessionWithChatResultInput$outboundSchema;
})(CreateChatSessionWithChatResultInput$ || (exports.CreateChatSessionWithChatResultInput$ = CreateChatSessionWithChatResultInput$ = {}));
//# sourceMappingURL=createchatsessionwithchatresultinput.js.map