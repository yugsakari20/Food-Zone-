import * as z from "zod";
import { RecordT, RecordT$Outbound } from "./record.js";
export type Citation = {
    number?: number | undefined;
    record: RecordT;
    hitUrl?: string | null | undefined;
};
/** @internal */
export declare const Citation$inboundSchema: z.ZodType<Citation, z.ZodTypeDef, unknown>;
/** @internal */
export type Citation$Outbound = {
    number?: number | undefined;
    record: RecordT$Outbound;
    hit_url?: string | null | undefined;
};
/** @internal */
export declare const Citation$outboundSchema: z.ZodType<Citation$Outbound, z.ZodTypeDef, Citation>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Citation$ {
    /** @deprecated use `Citation$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Citation, z.ZodTypeDef, unknown>;
    /** @deprecated use `Citation$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Citation$Outbound, z.ZodTypeDef, Citation>;
    /** @deprecated use `Citation$Outbound` instead. */
    type Outbound = Citation$Outbound;
}
//# sourceMappingURL=citation.d.ts.map