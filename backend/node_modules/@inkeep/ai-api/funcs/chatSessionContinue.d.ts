import { InkeepAICore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
export declare enum ContinueAcceptEnum {
    applicationJson = "application/json",
    textEventStream = "text/event-stream"
}
/**
 * Continue Chat Session
 */
export declare function chatSessionContinue(client: InkeepAICore, chatSessionId: string, continueChatSessionWithChatResultInput: components.ContinueChatSessionWithChatResultInput, options?: RequestOptions & {
    acceptHeaderOverride?: ContinueAcceptEnum;
}): Promise<Result<operations.ContinueResponse, errors.HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=chatSessionContinue.d.ts.map