import { InkeepAICore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
export declare enum CreateAcceptEnum {
    applicationJson = "application/json",
    textEventStream = "text/event-stream"
}
/**
 * Create Chat Session
 */
export declare function chatSessionCreate(client: InkeepAICore, request: components.CreateChatSessionWithChatResultInput, options?: RequestOptions & {
    acceptHeaderOverride?: CreateAcceptEnum;
}): Promise<Result<operations.CreateResponse, errors.HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=chatSessionCreate.d.ts.map